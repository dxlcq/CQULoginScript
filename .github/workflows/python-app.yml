name: Build Python Executables

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write   # 如果需要创建 Release，必须是 write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      #
      # 分别针对 Windows / 非 Windows
      #
      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: pyinstaller --onefile cqu.py

      - name: Build on Linux/macOS
        if: matrix.os != 'windows-latest'
        shell: bash
        run: pyinstaller --onefile cqu.py

      #
      # 分别上传
      #
      - name: Upload Executable Artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: cqu-windows
          path: dist/cqu.exe

      - name: Upload Executable Artifact (Linux/macOS)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: cqu-${{ matrix.os }}
          path: dist/cqu

  #
  # 如果需要在 push 时创建 Release
  #
  release:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: cqu-windows
          path: cqu-windows

      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v3
        with:
          name: cqu-ubuntu-latest
          path: cqu-ubuntu

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: cqu-macos-latest
          path: cqu-macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cqu-windows/cqu.exe
          asset_name: cqu-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Ubuntu)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cqu-ubuntu/cqu
          asset_name: cqu-ubuntu
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cqu-macos/cqu
          asset_name: cqu-macos
          asset_content_type: application/octet-stream